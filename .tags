!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
execPath	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "execPath": "C:\/Users\/ECEuser\/.platformio\/packages\/toolchain-atmelavr\/bin\/avr-g++.exe",$/;"	function	line:2
gccDefaultCFlags	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "gccDefaultCFlags": "-fsyntax-only -std=gnu11 -g -Os -Wall -ffunction-sections -fdata-sections -mmcu=atmega2560 -DF_CPU=16000000L -DPLATFORMIO=030100 -DARDUINO_ARCH_AVR -DARDUINO_AVR_MEGA2560 -DARDUINO=10608",$/;"	function	line:3
gccDefaultCppFlags	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "gccDefaultCppFlags": "-fsyntax-only -fno-exceptions -fno-threadsafe-statics -std=gnu++11 -g -Os -Wall -ffunction-sections -fdata-sections -mmcu=atmega2560 -DF_CPU=16000000L -DPLATFORMIO=030100 -DARDUINO_ARCH_AVR -DARDUINO_AVR_MEGA2560 -DARDUINO=10608",$/;"	function	line:4
gccErrorLimit	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "gccErrorLimit": 15,$/;"	function	line:5
gccIncludePaths	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "gccIncludePaths": "C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/cores\/arduino,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/variants\/mega,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/SoftwareSerial\/src,C:\/Users\/ECEuser\/Documents\/PlatformIO\/HAL9000\/lib\/SparkFun_ESP8266_AT_Arduino_Library\/src,C:\/Users\/ECEuser\/Documents\/PlatformIO\/HAL9000\/src,C:\/Users\/ECEuser\/Documents\/PlatformIO\/HAL9000\/lib\/SparkFun_ESP8266_AT_Arduino_Library\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Bridge\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/EEPROM\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Esplora\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Ethernet\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Firmata,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Firmata\/utility,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/GSM\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/HID\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Keyboard\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/LiquidCrystal\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Mouse\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/RobotIRremote\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Robot_Control\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Robot_Motor\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/SD\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/SPI\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Scheduler\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Servo\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/SoftwareSerial\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/SpacebrewYun\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Stepper\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/TFT\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Temboo\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/USBHost\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/WiFi\/src,C:\/Users\/ECEuser\/.platformio\/packages\/framework-arduinoavr\/libraries\/Wire\/src,C:\/Users\/ECEuser\/.platformio\/packages\/toolchain-atmelavr\/avr\/include,C:\/Users\/ECEuser\/.platformio\/packages\/toolchain-atmelavr\/lib\/gcc\/avr\/4.8.1\/include,C:\/Users\/ECEuser\/.platformio\/packages\/toolchain-atmelavr\/lib\/gcc\/avr\/4.8.1\/include-fixed",$/;"	function	line:6
gccSuppressWarnings	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\.gcc-flags.json	/^  "gccSuppressWarnings": false$/;"	function	line:7
ESP8266Client	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^ESP8266Client::ESP8266Client()$/;"	function	line:26	class:ESP8266Client	signature:()
ESP8266Client	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^ESP8266Client::ESP8266Client(uint8_t sock)$/;"	function	line:30	class:ESP8266Client	signature:(uint8_t sock)
status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^uint8_t ESP8266Client::status()$/;"	function	line:35	class:ESP8266Client	signature:()
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::connect(IPAddress ip, uint16_t port)$/;"	function	line:40	class:ESP8266Client	signature:(IPAddress ip, uint16_t port)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::connect(const char *host, uint16_t port)$/;"	function	line:45	class:ESP8266Client	signature:(const char *host, uint16_t port)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::connect(String host, uint16_t port, uint32_t keepAlive)$/;"	function	line:50	class:ESP8266Client	signature:(String host, uint16_t port, uint32_t keepAlive)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::connect(IPAddress ip, uint16_t port, uint32_t keepAlive) $/;"	function	line:55	class:ESP8266Client	signature:(IPAddress ip, uint16_t port, uint32_t keepAlive)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::connect(const char* host, uint16_t port, uint32_t keepAlive) $/;"	function	line:63	class:ESP8266Client	signature:(const char* host, uint16_t port, uint32_t keepAlive)
write	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^size_t ESP8266Client::write(uint8_t c)$/;"	function	line:76	class:ESP8266Client	signature:(uint8_t c)
write	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^size_t ESP8266Client::write(const uint8_t *buf, size_t size)$/;"	function	line:81	class:ESP8266Client	signature:(const uint8_t *buf, size_t size)
available	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::available()$/;"	function	line:86	class:ESP8266Client	signature:()
read	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::read()$/;"	function	line:99	class:ESP8266Client	signature:()
read	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::read(uint8_t *buf, size_t size)$/;"	function	line:104	class:ESP8266Client	signature:(uint8_t *buf, size_t size)
peek	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^int ESP8266Client::peek()$/;"	function	line:117	class:ESP8266Client	signature:()
flush	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^void ESP8266Client::flush()$/;"	function	line:122	class:ESP8266Client	signature:()
stop	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^void ESP8266Client::stop()$/;"	function	line:127	class:ESP8266Client	signature:()
connected	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^uint8_t ESP8266Client::connected()$/;"	function	line:133	class:ESP8266Client	signature:()
operator bool	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^ESP8266Client::operator bool()$/;"	function	line:148	class:ESP8266Client	signature:()
getFirstSocket	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.cpp	/^uint8_t ESP8266Client::getFirstSocket()$/;"	function	line:154	class:ESP8266Client	signature:()
_SPARKFUNESP8266CLIENT_H_	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.h	/^#define _SPARKFUNESP8266CLIENT_H_$/;"	macro	line:22
ESP8266Client	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.h	/^class ESP8266Client : public Client {$/;"	class	line:30
_srcport	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.h	/^	static uint16_t _srcport;$/;"	member	line:61	class:ESP8266Client
_socket	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.h	/^	uint16_t  _socket;$/;"	member	line:62	class:ESP8266Client
ipMuxEn	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Client.h	/^	bool ipMuxEn;$/;"	member	line:63	class:ESP8266Client
ESP8266Server	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^ESP8266Server::ESP8266Server(uint16_t port)$/;"	function	line:26	class:ESP8266Server	signature:(uint16_t port)
begin	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^void ESP8266Server::begin()$/;"	function	line:31	class:ESP8266Server	signature:()
available	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^ESP8266Client ESP8266Server::available(uint8_t wait)$/;"	function	line:36	class:ESP8266Server	signature:(uint8_t wait)
status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^uint8_t ESP8266Server::status() $/;"	function	line:64	class:ESP8266Server	signature:()
write	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^size_t ESP8266Server::write(uint8_t b)$/;"	function	line:70	class:ESP8266Server	signature:(uint8_t b)
write	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.cpp	/^size_t ESP8266Server::write(const uint8_t *buffer, size_t size)$/;"	function	line:75	class:ESP8266Server	signature:(const uint8_t *buffer, size_t size)
_SPARKFUNESP8266SERVER_H_	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.h	/^#define _SPARKFUNESP8266SERVER_H_$/;"	macro	line:22
ESP8266Server	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.h	/^class ESP8266Server : public Server $/;"	class	line:31
_port	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266Server.h	/^	uint16_t _port;$/;"	member	line:44	class:ESP8266Server
ESP8266_DISABLE_ECHO	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^#define ESP8266_DISABLE_ECHO$/;"	macro	line:26	file:
ESP8266_RX_BUFFER_LEN	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^#define ESP8266_RX_BUFFER_LEN /;"	macro	line:31	file:
esp8266RxBuffer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^char esp8266RxBuffer[ESP8266_RX_BUFFER_LEN];$/;"	variable	line:32
bufferHead	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^unsigned int bufferHead; \/\/ Holds position of latest byte placed in buffer.$/;"	variable	line:33
ESP8266Class	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^ESP8266Class::ESP8266Class()$/;"	function	line:39	class:ESP8266Class	signature:()
begin	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^bool ESP8266Class::begin(unsigned long baudRate, esp8266_serial_port serialPort)$/;"	function	line:45	class:ESP8266Class	signature:(unsigned long baudRate, esp8266_serial_port serialPort)
test	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^bool ESP8266Class::test()$/;"	function	line:79	class:ESP8266Class	signature:()
reset	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^bool ESP8266Class::reset()$/;"	function	line:89	class:ESP8266Class	signature:()
echo	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^bool ESP8266Class::echo(bool enable)$/;"	function	line:99	class:ESP8266Class	signature:(bool enable)
setBaud	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^bool ESP8266Class::setBaud(unsigned long baud)$/;"	function	line:112	class:ESP8266Class	signature:(unsigned long baud)
getVersion	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::getVersion(char * ATversion, char * SDKversion, char * compileTime)$/;"	function	line:131	class:ESP8266Class	signature:(char * ATversion, char * SDKversion, char * compileTime)
getMode	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::getMode()$/;"	function	line:181	class:ESP8266Class	signature:()
setMode	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::setMode(esp8266_wifi_mode mode)$/;"	function	line:210	class:ESP8266Class	signature:(esp8266_wifi_mode mode)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::connect(const char * ssid)$/;"	function	line:219	class:ESP8266Class	signature:(const char * ssid)
connect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::connect(const char * ssid, const char * pwd)$/;"	function	line:229	class:ESP8266Class	signature:(const char * ssid, const char * pwd)
getAP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::getAP(char * ssid)$/;"	function	line:248	class:ESP8266Class	signature:(char * ssid)
disconnect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::disconnect()$/;"	function	line:277	class:ESP8266Class	signature:()
status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::status()$/;"	function	line:299	class:ESP8266Class	signature:()
updateStatus	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::updateStatus()$/;"	function	line:319	class:ESP8266Class	signature:()
localIP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^IPAddress ESP8266Class::localIP()$/;"	function	line:408	class:ESP8266Class	signature:()
localMAC	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::localMAC(char * mac)$/;"	function	line:448	class:ESP8266Class	signature:(char * mac)
tcpConnect	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::tcpConnect(uint8_t linkID, const char * destination, uint16_t port, uint16_t keepAlive)$/;"	function	line:475	class:ESP8266Class	signature:(uint8_t linkID, const char * destination, uint16_t port, uint16_t keepAlive)
tcpSend	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::tcpSend(uint8_t linkID, const uint8_t *buf, size_t size)$/;"	function	line:514	class:ESP8266Class	signature:(uint8_t linkID, const uint8_t *buf, size_t size)
close	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::close(uint8_t linkID)$/;"	function	line:537	class:ESP8266Class	signature:(uint8_t linkID)
setTransferMode	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::setTransferMode(uint8_t mode)$/;"	function	line:548	class:ESP8266Class	signature:(uint8_t mode)
setMux	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::setMux(uint8_t mux)$/;"	function	line:557	class:ESP8266Class	signature:(uint8_t mux)
configureTCPServer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::configureTCPServer(uint16_t port, uint8_t create)$/;"	function	line:566	class:ESP8266Class	signature:(uint16_t port, uint8_t create)
ping	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::ping(IPAddress ip)$/;"	function	line:576	class:ESP8266Class	signature:(IPAddress ip)
ping	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::ping(char * server)$/;"	function	line:583	class:ESP8266Class	signature:(char * server)
pinMode	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::pinMode(uint8_t pin, uint8_t mode)$/;"	function	line:617	class:ESP8266Class	signature:(uint8_t pin, uint8_t mode)
digitalWrite	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::digitalWrite(uint8_t pin, uint8_t state)$/;"	function	line:633	class:ESP8266Class	signature:(uint8_t pin, uint8_t state)
digitalRead	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int8_t ESP8266Class::digitalRead(uint8_t pin)$/;"	function	line:647	class:ESP8266Class	signature:(uint8_t pin)
write	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^size_t ESP8266Class::write(uint8_t c)$/;"	function	line:669	class:ESP8266Class	signature:(uint8_t c)
available	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int ESP8266Class::available()$/;"	function	line:674	class:ESP8266Class	signature:()
read	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int ESP8266Class::read()$/;"	function	line:679	class:ESP8266Class	signature:()
peek	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int ESP8266Class::peek()$/;"	function	line:684	class:ESP8266Class	signature:()
flush	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^void ESP8266Class::flush()$/;"	function	line:689	class:ESP8266Class	signature:()
sendCommand	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^void ESP8266Class::sendCommand(const char * cmd, enum esp8266_command_type type, const char * params)$/;"	function	line:698	class:ESP8266Class	signature:(const char * cmd, enum esp8266_command_type type, const char * params)
readForResponse	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::readForResponse(const char * rsp, unsigned int timeout)$/;"	function	line:712	class:ESP8266Class	signature:(const char * rsp, unsigned int timeout)
readForResponses	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^int16_t ESP8266Class::readForResponses(const char * pass, const char * fail, unsigned int timeout)$/;"	function	line:734	class:ESP8266Class	signature:(const char * pass, const char * fail, unsigned int timeout)
clearBuffer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^void ESP8266Class::clearBuffer()$/;"	function	line:761	class:ESP8266Class	signature:()
readByteToBuffer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^unsigned int ESP8266Class::readByteToBuffer()$/;"	function	line:767	class:ESP8266Class	signature:()
searchBuffer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^char * ESP8266Class::searchBuffer(const char * test)$/;"	function	line:780	class:ESP8266Class	signature:(const char * test)
esp8266	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.cpp	/^ESP8266Class esp8266;$/;"	variable	line:798
_SPARKFUNESP8266_H_	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define _SPARKFUNESP8266_H_$/;"	macro	line:22
ESP8266_SW_RX	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define ESP8266_SW_RX	/;"	macro	line:33
ESP8266_SW_TX	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define ESP8266_SW_TX	/;"	macro	line:34
COMMAND_RESPONSE_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define COMMAND_RESPONSE_TIMEOUT /;"	macro	line:39
COMMAND_PING_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define COMMAND_PING_TIMEOUT /;"	macro	line:40
WIFI_CONNECT_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define WIFI_CONNECT_TIMEOUT /;"	macro	line:41
COMMAND_RESET_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define COMMAND_RESET_TIMEOUT /;"	macro	line:42
CLIENT_CONNECT_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define CLIENT_CONNECT_TIMEOUT /;"	macro	line:43
ESP8266_MAX_SOCK_NUM	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define ESP8266_MAX_SOCK_NUM /;"	macro	line:45
ESP8266_SOCK_NOT_AVAIL	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^#define ESP8266_SOCK_NOT_AVAIL /;"	macro	line:46
esp8266_cmd_rsp	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_cmd_rsp {$/;"	enum	line:50
ESP8266_CMD_BAD	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_CMD_BAD = -5,$/;"	enumerator	line:51	enum:esp8266_cmd_rsp
ESP8266_RSP_MEMORY_ERR	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_RSP_MEMORY_ERR = -4,$/;"	enumerator	line:52	enum:esp8266_cmd_rsp
ESP8266_RSP_FAIL	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_RSP_FAIL = -3,$/;"	enumerator	line:53	enum:esp8266_cmd_rsp
ESP8266_RSP_UNKNOWN	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_RSP_UNKNOWN = -2,$/;"	enumerator	line:54	enum:esp8266_cmd_rsp
ESP8266_RSP_TIMEOUT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_RSP_TIMEOUT = -1,$/;"	enumerator	line:55	enum:esp8266_cmd_rsp
ESP8266_RSP_SUCCESS	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_RSP_SUCCESS = 0$/;"	enumerator	line:56	enum:esp8266_cmd_rsp
esp8266_wifi_mode	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_wifi_mode {$/;"	enum	line:59
ESP8266_MODE_STA	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_MODE_STA = 1,$/;"	enumerator	line:60	enum:esp8266_wifi_mode
ESP8266_MODE_AP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_MODE_AP = 2,$/;"	enumerator	line:61	enum:esp8266_wifi_mode
ESP8266_MODE_STAAP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_MODE_STAAP = 3$/;"	enumerator	line:62	enum:esp8266_wifi_mode
esp8266_command_type	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_command_type {$/;"	enum	line:65
ESP8266_CMD_QUERY	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_CMD_QUERY,$/;"	enumerator	line:66	enum:esp8266_command_type
ESP8266_CMD_SETUP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_CMD_SETUP,$/;"	enumerator	line:67	enum:esp8266_command_type
ESP8266_CMD_EXECUTE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_CMD_EXECUTE$/;"	enumerator	line:68	enum:esp8266_command_type
esp8266_encryption	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_encryption {$/;"	enum	line:71
ESP8266_ECN_OPEN	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_ECN_OPEN,$/;"	enumerator	line:72	enum:esp8266_encryption
ESP8266_ECN_WPA_PSK	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_ECN_WPA_PSK,$/;"	enumerator	line:73	enum:esp8266_encryption
ESP8266_ECN_WPA2_PSK	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_ECN_WPA2_PSK,$/;"	enumerator	line:74	enum:esp8266_encryption
ESP8266_ECN_WPA_WPA2_PSK	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_ECN_WPA_WPA2_PSK$/;"	enumerator	line:75	enum:esp8266_encryption
esp8266_connect_status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_connect_status {$/;"	enum	line:78
ESP8266_STATUS_GOTIP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_STATUS_GOTIP = 2,$/;"	enumerator	line:79	enum:esp8266_connect_status
ESP8266_STATUS_CONNECTED	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_STATUS_CONNECTED = 3,$/;"	enumerator	line:80	enum:esp8266_connect_status
ESP8266_STATUS_DISCONNECTED	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_STATUS_DISCONNECTED = 4,$/;"	enumerator	line:81	enum:esp8266_connect_status
ESP8266_STATUS_NOWIFI	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_STATUS_NOWIFI = 5$/;"	enumerator	line:82	enum:esp8266_connect_status
esp8266_serial_port	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_serial_port {$/;"	enum	line:85
ESP8266_SOFTWARE_SERIAL	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_SOFTWARE_SERIAL,$/;"	enumerator	line:86	enum:esp8266_serial_port
ESP8266_HARDWARE_SERIAL	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_HARDWARE_SERIAL$/;"	enumerator	line:87	enum:esp8266_serial_port
esp8266_socket_state	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_socket_state {$/;"	enum	line:90
AVAILABLE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	AVAILABLE = 0,$/;"	enumerator	line:91	enum:esp8266_socket_state
TAKEN	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	TAKEN = 1,$/;"	enumerator	line:92	enum:esp8266_socket_state
esp8266_connection_type	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_connection_type {$/;"	enum	line:95
ESP8266_TCP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_TCP,$/;"	enumerator	line:96	enum:esp8266_connection_type
ESP8266_UDP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_UDP,$/;"	enumerator	line:97	enum:esp8266_connection_type
ESP8266_TYPE_UNDEFINED	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_TYPE_UNDEFINED$/;"	enumerator	line:98	enum:esp8266_connection_type
esp8266_tetype	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^typedef enum esp8266_tetype {$/;"	enum	line:101
ESP8266_CLIENT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_CLIENT,$/;"	enumerator	line:102	enum:esp8266_tetype
ESP8266_SERVER	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	ESP8266_SERVER$/;"	enumerator	line:103	enum:esp8266_tetype
esp8266_ipstatus	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^struct esp8266_ipstatus$/;"	struct	line:106
linkID	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	uint8_t linkID;$/;"	member	line:108	struct:esp8266_ipstatus
type	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	esp8266_connection_type type;$/;"	member	line:109	struct:esp8266_ipstatus
remoteIP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	IPAddress remoteIP;$/;"	member	line:110	struct:esp8266_ipstatus
port	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	uint16_t port;$/;"	member	line:111	struct:esp8266_ipstatus
tetype	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	esp8266_tetype tetype;$/;"	member	line:112	struct:esp8266_ipstatus
esp8266_status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^struct esp8266_status$/;"	struct	line:115
stat	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	esp8266_connect_status stat;$/;"	member	line:117	struct:esp8266_status
ipstatus	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	esp8266_ipstatus ipstatus[ESP8266_MAX_SOCK_NUM];$/;"	member	line:118	struct:esp8266_status
ESP8266Class	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^class ESP8266Class : public Stream$/;"	class	line:121
_state	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^    int16_t _state[ESP8266_MAX_SOCK_NUM];$/;"	member	line:183	class:ESP8266Class
_serial	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^    Stream* _serial;$/;"	member	line:186	class:ESP8266Class
_baud	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	unsigned long _baud;$/;"	member	line:187	class:ESP8266Class
_status	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\SparkFunESP8266WiFi.h	/^	esp8266_status _status;$/;"	member	line:213	class:ESP8266Class
RESPONSE_OK	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char RESPONSE_OK[] = "OK\\r\\n";$/;"	variable	line:24
RESPONSE_ERROR	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char RESPONSE_ERROR[] = "ERROR\\r\\n";$/;"	variable	line:25
RESPONSE_FAIL	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char RESPONSE_FAIL[] = "FAIL";$/;"	variable	line:26
RESPONSE_READY	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char RESPONSE_READY[] = "READY!";$/;"	variable	line:27
ESP8266_TEST	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TEST[] = "";	\/\/ Test AT startup$/;"	variable	line:32
ESP8266_RESET	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_RESET[] = "+RST"; \/\/ Restart module$/;"	variable	line:33
ESP8266_VERSION	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_VERSION[] = "+GMR"; \/\/ View version info$/;"	variable	line:34
ESP8266_ECHO_ENABLE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_ECHO_ENABLE[] = "E1"; \/\/ AT commands echo$/;"	variable	line:36
ESP8266_ECHO_DISABLE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_ECHO_DISABLE[] = "E0"; \/\/ AT commands echo$/;"	variable	line:37
ESP8266_UART	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_UART[] = "+UART"; \/\/ UART configuration$/;"	variable	line:39
ESP8266_WIFI_MODE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_WIFI_MODE[] = "+CWMODE"; \/\/ WiFi mode (sta\/AP\/sta+AP)$/;"	variable	line:44
ESP8266_CONNECT_AP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_CONNECT_AP[] = "+CWJAP"; \/\/ Connect to AP$/;"	variable	line:45
ESP8266_DISCONNECT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_DISCONNECT[] = "+CWQAP"; \/\/ Disconnect from AP$/;"	variable	line:47
ESP8266_GET_STA_MAC	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_GET_STA_MAC[] = "+CIPSTAMAC"; \/\/ Get MAC address of station$/;"	variable	line:53
ESP8266_TCP_STATUS	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TCP_STATUS[] = "+CIPSTATUS"; \/\/ Get connection status$/;"	variable	line:61
ESP8266_TCP_CONNECT	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TCP_CONNECT[] = "+CIPSTART"; \/\/ Establish TCP connection or register UDP port$/;"	variable	line:62
ESP8266_TCP_SEND	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TCP_SEND[] = "+CIPSEND"; \/\/ Send Data$/;"	variable	line:63
ESP8266_TCP_CLOSE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TCP_CLOSE[] = "+CIPCLOSE"; \/\/ Close TCP\/UDP connection$/;"	variable	line:64
ESP8266_GET_LOCAL_IP	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_GET_LOCAL_IP[] = "+CIFSR"; \/\/ Get local IP address$/;"	variable	line:65
ESP8266_TCP_MULTIPLE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TCP_MULTIPLE[] = "+CIPMUX"; \/\/ Set multiple connections mode$/;"	variable	line:66
ESP8266_SERVER_CONFIG	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_SERVER_CONFIG[] = "+CIPSERVER"; \/\/ Configure as server$/;"	variable	line:67
ESP8266_TRANSMISSION_MODE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_TRANSMISSION_MODE[] = "+CIPMODE"; \/\/ Set transmission mode$/;"	variable	line:68
ESP8266_PING	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_PING[] = "+PING"; \/\/ Function PING$/;"	variable	line:70
ESP8266_PINMODE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_PINMODE[] = "+PINMODE"; \/\/ Set GPIO mode (input\/output)$/;"	variable	line:75
ESP8266_PINWRITE	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_PINWRITE[] = "+PINWRITE"; \/\/ Write GPIO (high\/low)$/;"	variable	line:76
ESP8266_PINREAD	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\lib\SparkFun_ESP8266_AT_Arduino_Library\src\util\ESP8266_AT.h	/^const char ESP8266_PINREAD[] = "+PINREAD"; \/\/ Read GPIO digital value$/;"	variable	line:77
HAL9000	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\README.md	/^# HAL9000/;"	function	line:1
setup	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\main.cpp	/^void setup() {$/;"	function	line:7	signature:()
loop	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\main.cpp	/^void loop() {$/;"	function	line:22	signature:()
speedPin_M1	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^int speedPin_M1 = 5;     \/\/M1 Speed Control$/;"	variable	line:4
speedPin_M2	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^int speedPin_M2 = 6;     \/\/M2 Speed Control$/;"	variable	line:5
directionPin_M1	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^int directionPin_M1 = 4;     \/\/M1 Direction Control$/;"	variable	line:6
directionPin_M2	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^int directionPin_M2 = 7;     \/\/M1 Direction Control$/;"	variable	line:7
carStop	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^void carStop(){                 \/\/  Motor Stop$/;"	function	line:9	signature:()
carBack	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^void carBack(int leftSpeed,int rightSpeed){         \/\/Move backward$/;"	function	line:16	signature:(int leftSpeed,int rightSpeed)
carAdvance	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^void carAdvance(int leftSpeed,int rightSpeed){       \/\/Move forward$/;"	function	line:23	signature:(int leftSpeed,int rightSpeed)
carTurnLeft	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^void carTurnLeft(int leftSpeed,int rightSpeed){      \/\/Turn Left$/;"	function	line:30	signature:(int leftSpeed,int rightSpeed)
carTurnRight	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.cpp	/^void carTurnRight(int leftSpeed,int rightSpeed){      \/\/Turn Right$/;"	function	line:36	signature:(int leftSpeed,int rightSpeed)
_MOTORS_H	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\motors.h	/^#define _MOTORS_H$/;"	macro	line:2
_SENSORS_H	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\sensors.h	/^#define _SENSORS_H$/;"	macro	line:2
mySSID	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^const char mySSID[] = "FasterThanYou";$/;"	variable	line:13
myPSK	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^const char myPSK[] = "deerleeder";$/;"	variable	line:14
server	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^ESP8266Server server = ESP8266Server(80);$/;"	variable	line:21
destServer	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^const char destServer[] = "example.com";$/;"	variable	line:26
htmlHeader	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^const String htmlHeader = "HTTP\/1.1 200 OK\\r\\n"$/;"	variable	line:27
httpRequest	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^const String httpRequest = "GET \/ HTTP\/1.1\\n"$/;"	variable	line:33
errorLoop	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void errorLoop(int error) {$/;"	function	line:38	signature:(int error)
initializeESP8266	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void initializeESP8266() {$/;"	function	line:46	signature:()
connectESP8266	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void connectESP8266() {$/;"	function	line:60	signature:()
displayConnectInfo	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void displayConnectInfo() {$/;"	function	line:101	signature:()
clientDemo	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void clientDemo() {$/;"	function	line:120	signature:()
serverSetup	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void serverSetup() {$/;"	function	line:151	signature:()
serverDemo	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void serverDemo() {$/;"	function	line:161	signature:()
serialTrigger	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.cpp	/^void serialTrigger(String message) {$/;"	function	line:216	signature:(String message)
_WiFi_H	C:\Users\ECEuser\Documents\PlatformIO\HAL9000\src\WiFi.h	/^#define _WiFi_H$/;"	macro	line:2
